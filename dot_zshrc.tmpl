# ------------------------------------------
# aliases
# ------------------------------------------

# load aliases
source "$HOME/.zsh_aliases"

# ------------------------------------------
# vault
# ------------------------------------------

{{- if eq .chezmoi.os "darwin" }}
export PATH="$HOME/.bw:$PATH"
{{- end }}


# ------------------------------------------
# editor
# ------------------------------------------

{{- if eq .chezmoi.os "darwin" }}
# vscode
export EDITOR="code -w"
{{- end }}


# ------------------------------------------
# key bindings
# ------------------------------------------

# navigate words using ctrl + arrow keys
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word

# navigate zsh history using p + n
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward


# ------------------------------------------
# zsh plugins
# ------------------------------------------

# load zsh-syntax-highlighting
source "$HOME/.cli-plugins/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

# load zsh-completions
fpath=("$HOME/.cli-plugins/zsh/zsh-completions/" $fpath)

# completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'

# load zsh-autosuggestions
source "$HOME/.cli-plugins/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh"

# autosuggestions history config
export HISTSIZE=10000
export HISTFILE=$HOME/.zsh_history
export SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups


# ------------------------------------------
# starship
# ------------------------------------------

# start starship prompt
eval "$(starship init zsh)"
export STARSHIP_CONFIG=~/.config/starship/starship.toml

# ------------------------------------------
# zoxide (cd)
# ------------------------------------------

export PATH=$HOME/.local/bin:$PATH
eval "$(zoxide init --cmd cd zsh)"

# ------------------------------------------
# fzf (fuzzy finder)
# ------------------------------------------

# set up path (due to git install)
export PATH="$PATH:$HOME/.fzf/bin"

# set up fzf key bindings and fuzzy completion
source <(fzf --zsh)

# load fzf-git script
source "$HOME/.cli-plugins/fzf/fzf-git.sh"

# load fzf-tab script
autoload -U compinit; compinit -u
source "$HOME/.cli-plugins/fzf/fzf-tab/fzf-tab.plugin.zsh"


# ------------------------------------------
# fd (find)
# ------------------------------------------
# ! mac only due to issues with fdfind

# set up path (due to symlink)
#export PATH="$PATH:$HOME/.local/bin/fd"

# --- aliases ---

{{- if lookPath "fdfind" }}
alias fd=fdfind
{{- end }}


{{- if eq .chezmoi.os "darwin" }}

# use fd instead of fzf
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"

export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"


# --- apply fd to fzf options ---

# advanced customization of fzf options via _fzf_comprun function
# - the first argument to the function is the name of the command.
# - you should make sure to pass the rest of the arguments to fzf.

_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo ${}'"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview "$show_file_or_dir_preview" "$@" ;;
  esac
}

{{- end }}


# ------------------------------------------
# eza (ls)
# ------------------------------------------

# --- aliases ---

{{- if lookPath "eza" }}

  # ! drop git flag for older versions of debian (unsupported)
  if ! eza --git /dev/null 2>&1 | grep -q "feature was disabled"; then

    # minimal version var (default) > add f for full view
    ls_minimal="--no-permissions --no-filesize --no-user --no-time --git"
    alias lsf="eza -alF --color=always --icons=always --git"

  else

    # minimal version var (no git)
    ls_minimal="--no-permissions --no-filesize --no-user --no-time"
    alias lsf="eza -alF --color=always --icons=always"

  fi

    alias ld="eza -lD --color=always --icons=always $ls_minimal"
    alias ldf="eza -lD --color=always --icons=always"

    alias lf="eza -lF --color=always --icons=always $ls_minimal"
    alias lff="eza -lF --color=always --icons=always"

    alias lh="eza -ld .* --color=always --icons=always --group-directories-first $ls_minimal"
    alias lhf="eza -ld .* --color=always --icons=always --group-directories-first"

    alias ll="eza -al --icons=always --color=always --group-directories-first $ls_minimal"
    alias llf="eza -al --icons=always --color=always --group-directories-first"

    alias ls="eza -alF --color=always --icons=always $ls_minimal"

    alias lt="eza -al --color=always --icons=always --sort=modified $ls_minimal"
    alias ltf="eza -al --icons=always --color=always --sort=modified"

    alias tree="eza -alF --tree --level=2 --icons=always --color=always $ls_minimal"
    alias treef="eza -alF --tree --level=2 --icons=always --color=always"

{{- end }}

# ------------------------------------------
# bat (cat)
# ------------------------------------------

# --- theme ---

#export BAT_THEME='Monokai Extended'
export BAT_THEME=tokyonight_night

# --- aliases ---

{{- if lookPath "bat" }}
  alias cat='bat --paging never --style plain'
{{- else if lookPath "batcat" }}
  alias cat='batcat --paging never --style plain'
{{- end }}

# ------------------------------------------
# thefuck (correction)
# ------------------------------------------
# ! disabled due to bugs

#{{ if and (eq .chezmoi.os "linux") (or (not .chezmoi.hostname) (not (contains "pve" .chezmoi.hostname))) -}}
#eval $(thefuck --alias)
#{{ end -}}





